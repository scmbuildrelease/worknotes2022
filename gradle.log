+ ./gradlew clean build publish --max-workers=1 -Dlocation=docker

gradle --version
gradle help -Dorg.gradle.debug=true
 --console=verbose flag.
 --info
 --info, --stacktrace, --debug in command line option
 
 Steps to get this feature is as follows:-

Goto settings options of android studio.
In the list of items You will see Build, Execution, deployment option.
If you click on this you will see Compiler option there you can add command-line options ex:- stacktrace --debug.
Share

Since Gradle 4.3 you can use org.gradle.console property in gradle.properties:
org.gradle.console=rich


Create a file called gradle.properties inside your ~/.gradle/ folder.
Inside gradle.properties, add the line org.gradle.console=rich.

y default, the build cache is not enabled. You can enable the build cache in a couple of ways:
Run with --build-cache on the command-line
Gradle will use the build cache for this build only.
Put org.gradle.caching=true in your gradle.properties
Gradle will try to reuse outputs from previous builds for all builds, unless explicitly disabled with --no-build-cache.


A task needs to opt-in to being cacheable (see Cacheable tasks), since it doesn't make sense for every task to be cacheable.
Opting in can happen by annotating the task with @CacheableTask or by using task.outputs.cacheIf { true }, so you could do that for the npm configure task.
Note that cacheable tasks need to declare their inputs and outputs correctly. If they don't, then you may experience invalid build failures.
 

./gradlew cleanBuildCache

As @Bradford20000 pointed out in the comments, there might be a gradle.properties file as well as global gradle scripts located under $HOME/.gradle. In such case special attention must be paid when deleting the content of this directory.

The .gradle/caches directory holds the Gradle build cache. So if you have any error about build cache, you can delete it.

The --no-build-cache option will run gradle without the build cache.

Daemon on MS Windows If you're on Windows, you'll need to kill the daemon before it allows you to clear those directories. See Kill all Gradle Daemons Regardless Version? for more info.

