#!/bin/bash
echo -e "Hello, World\n\n"
echo -n "Hello, World\n\n"
echo -E Bye "\t\t\t" For now "\n\n"



echo -n hiii \t\t"  #no new line
echo -e hi "\t\t\n\n"  # meaningful
echo -E hello "\t\t\n\n"  ##charachter

source a.sh  ##bash new process

./a.sh 


declare -l #low case
declare -u # upcase
declare -r #readonly
declare -a  #array
declare -A   # associated array

typeset x
x=7

x=0
while ((x < 10))
do 
	echo $x ; date >date.$x
	((x=x+1))
done


ls -l ./ | while
	read a b c d 
	do 
		echo $c
	done


seq 1 5 

for n in seq `1 5`

for f in $(find . -name *.c)

for j in *.c
 
for d in $(datefile)




443 https

ufw allow ssh
ufw allow 22/tcp

touch -m file

netstat -nbo

 -m      Change the modification time of the file.  The access time of the file is not changed
             unless the -a flag is also specified.
             

u=rwx u+rwx g=rw o=
-rwxrw-r--.
chmod ugo-x file.txt
 
umask
umask -S
init dir 777.  -022 = 755
init file 666.  -022 = 644. not excute file by default
SUID, SGID,STICKY. 4 2 1  SET as the user owner of this file/group
-rwxr-Sr-x  not set
-rwxr-sr-x  set
-rwsr-xr-x user ower x, set by s,rwx421. s==1

sudo chmod 4755.  /usr/bin/su  =====sudo chmod u+s   rwsr--r--

chmod 2755=== chmod g+s

sudo chown :iwang /tmpb
sudo chmod 2770 /tmpb.      drwxrws---
sudo useradd -G acconts iwang
sudo passwd iwang
sudo chmod 1777 /abc. 1 is sticky drwxrwxrwt  

sudo gpassword -a iwang accounting
sudo g+rwx accounting
sudo chmod g+s accounting
sudo chmod o+t accounting
sudo o=rx acconting



setfacl -m user:root:rwx aclfile
getfacl -t aclfile
setfacl -R -m user:iwang:rwx file1
setfacl -d -m user:iwang:rwx dir1
setfacl -m group:root:rwx dir1
setfacl -d -m user:iwang:rwx dir1.  inhertance

setfacl -x -k -d
setfacl -x user:iwang dir1/
setfacl -R -b root adir1/
 
sudo setfacl -d -m group:dev:rwx /home/dev
sudo chmod o+t /home/dev
sudo setfacl -m group:sales:rx /home/dev






set -x.   set -e 
set -e：启用所有命令的检查。 如果命令因错误而退出并且调用者未检查此类错误，则脚本将立即中止。 启用此功能将使您的脚本更加健壮。
但是不要等到你的脚本“完成”后才设置标志，因为修复脚本以启用此功能将是一场噩梦。 只需将 set -e 写为代码的第一行； 好吧……在炮弹爆炸之后。
set -x：如果您正在编写简单的脚本，这些脚本旨在为一些任务的执行编写脚本（而不是用 shell 编写的完整程序），请设置此标志以跟踪所
有命令的执行。 这将使解释器在执行之前打印每个命令，因此它将帮助您了解任何时间点发生的事情。 
set -x enables a mode of the shell where all executed commands are printed to the terminal. 
In your case it's clearly used for debugging, which is a typical use case for set -x: printing 
every command as it is executed may help you to visualize the control flow of the script if 
it is not functioning as expected.
set +x disables it.
With set +e (the default) errors will occur, but the script will continue to run. set -e sets an non-ignoring 
error state. That means, if command or pipeline has an error (something returns non zero), the bash will stop 
the execution of the script.


if [-z "$1"]    if paramet file was not given , it is $1 empty , it is zero
if [ ! -f "$xxx" ] if this file is not exist.
if [ -d "$JENKINS_HOME" ].  if this dir is there


xx=$(basename "$i"). $(basename "/tmp/aaa/aaa/a.txt")  >>>> a.txt

grep -E -i
pip3 list | grep -Ei 'foo|bar|baz'
-E, --extended-regexp Interpret PATTERN as an extended regular expression (ERE, see below).
-i, --ignore-case Ignore case distinctions in both the PATTERN and the input files.

egrep is the same as grep -E. egrep … is deprecated” 

cut -d: -f2
sed 's/ //'
cut -f1 -d'.'

    for i in "$xx_DIR"/*/; do
        xxxxxx=$(basename "$i") 
 	done >"$TEMP_xxx"







-  delete note by inode number
rm \"la\*
ls -i
7404301 "la*
find . -maxdepth 1 -type f -inum 7404301
./"la*
find . -maxdepth 1 -type f -inum 7404301 -delete
find ./ -type f  -name "a*"

ssh auto done

#!/bin/sh -x

if [ -z "$aaa_SSH_KEY" ]; then
    # if   ssh using default keyfile
    ssh "$@"
else
    if [[ $1 =~ "ops-bbbbb" ]]; then
      ssh -i "$aaaaa_JENKINS_SSH_KEY" "$@"
    else
      ssh -i "$bbbbb_SLAVE_SSH_KEY" "$@"
    fi
fi




du hd 1
du -h --max-depth=1

#!/bin/bash
errorinfo=`cat error.txt`
if [ "$errorinfo"=="Error Log" ]
then
  echo "could not xx is running now"
  exit 0
else
  echo "successful now"
  exit 0
fi

[ -s error.txt ] && echo "file has something" || echo "file is empty"

find . -type f -size +1M
find ./ -type f -name "*.ttf" -delete






set -e: exits if a command fails
set -u: errors if an variable is referenced before being set
set -x: shows the commands that get run

df -aTh
ps -aux --sort -pcpu,+pmem | head -n 10

linux sed -i 's/release\@xx.com/xxx\@xxx.com/g' *
mac:
LC_ALL=C find ./ -type f -exec  sed -i '' -e "s/xxx@xx.com/xxxxxxx@xx.com/" {} \; 

find . -maxdepth 1 -mindepth 1 -type d -exec du -hs  {} \;\

find . -maxdepth 3 -mindepth 1 -type d -exec du -hs  {} \;

xx4 users | sed -r 's/\(\S+\s*\S+\s*\S+\s*\S+\)//' | awk '{ print $1 , $2 , $4 }' | tr -d "/" | sort -k 3n | head -n 30





cat a | tr , \\n | awk '{print $3}' | sort  | grep @aa| sort | sed 's/@aa.com//g' | sort 
cat b | sed 's/<//g' | sed 's/>//g' |tr '[:upper:]' '[:lower:]'  | sort
cat a | tr '[:upper:]' '[:lower:]'  | tr ">" \\n | sed 's/(bb)//g' | sed 's/@aa.com//g' |sed 's/@bb.com//g' | sed 's/@cc.com//g' | awk '{print$NF}'  | sed 's/<//g'| sort 

cat a | tr '[:upper:]' '[:lower:]'  | tr ">" \\n | sed 's/(bb)//g' | sed 's/,//g' | sed 's/<//g' |sort
